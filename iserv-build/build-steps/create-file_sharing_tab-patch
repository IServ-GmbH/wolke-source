#!/bin/bash
set -e

nextcloud_version="$1"

if [ -z "$nextcloud_version" ]; then
  echo "Nextcloud Version missing"
  exit 1
fi

temp_dir="$(mktemp -d "${TMPDIR:-/tmp/}$(basename "$0").XXXXXXXXXXXX")"
current_dir="$(pwd)"
file_sharing_tab_combined="$current_dir/docker/cloudfiles/adds/patches/generated/file_sharing_tab_combined.patch"
file_sharing_tab_part="$current_dir/docker/cloudfiles/build-steps/patches/limit_link_share_edit.patch"

cd "$temp_dir"
# If ever another minified patch is required I STRONGLY advise reusing the cloned repo and resetting it instead of recloning.
echo "file_sharing_tab: Cloning server"
git clone https://github.com/nextcloud/server.git
cd server
git checkout "v$nextcloud_version"

echo "file_sharing_tab: Applying patches..."
git apply "$file_sharing_tab_part"

echo "file_sharing_tab: Downloading JS dependencies..."
make npm-init
echo "file_sharing_tab: Build JS artefacts..."
# Note from past self: You cannot use the MODULE env var to speed this build up.
# The resulting file will be loaded in the browser but not executed (No idea why)
make build-js-production

echo "file_sharing_tab: Saving diff..."
# We diff everything, not just the generated files, to comply with the open source licence
# Binary because minified sources are excluded from normal diff by nextcloud
echo "This file is autogenerated by build-steps/create-file_sharing_tab-patch" > "$file_sharing_tab_combined"
git diff --binary dist/files_sharing-files_sharing_tab.js.map dist/files_sharing-files_sharing_tab.js >> "$file_sharing_tab_combined"

echo "file_sharing_tab: Done"
cd "$current_dir"
rm -rf "$temp_dir"
