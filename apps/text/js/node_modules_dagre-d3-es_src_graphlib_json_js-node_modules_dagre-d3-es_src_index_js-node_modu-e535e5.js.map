{"version":3,"file":"node_modules_dagre-d3-es_src_graphlib_json_js-node_modules_dagre-d3-es_src_index_js-node_modu-e535e5.js?v=709a4d7b9f78025ffca1","mappings":"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","sources":["webpack:///text/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-line.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-polygon.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-rect.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/label/add-html-label.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/util.js","webpack:///text/node_modules/dagre-d3-es/src/graphlib/json.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/arrows.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/label/add-label.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/label/add-svg-label.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/label/add-text-label.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/create-clusters.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/create-edge-labels.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-node.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/create-edge-paths.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/create-nodes.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-ellipse.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/shapes.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/intersect/intersect-circle.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/render.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/position-nodes.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/position-edge-labels.js","webpack:///text/node_modules/dagre-d3-es/src/dagre-js/position-clusters.js","webpack:///text/node_modules/khroma/dist/methods/channel.js","webpack:///text/node_modules/lodash-es/clone.js"],"sourcesContent":["export { intersectLine };\n\n/*\n * Returns the point at which two lines, p and q, intersect or returns\n * undefined if they do not intersect.\n */\nfunction intersectLine(p1, p2, q1, q2) {\n  // Algorithm from J. Avro, (ed.) Graphics Gems, No 2, Morgan Kaufmann, 1994,\n  // p7 and p473.\n\n  var a1, a2, b1, b2, c1, c2;\n  var r1, r2, r3, r4;\n  var denom, offset, num;\n  var x, y;\n\n  // Compute a1, b1, c1, where line joining points 1 and 2 is F(x,y) = a1 x +\n  // b1 y + c1 = 0.\n  a1 = p2.y - p1.y;\n  b1 = p1.x - p2.x;\n  c1 = p2.x * p1.y - p1.x * p2.y;\n\n  // Compute r3 and r4.\n  r3 = a1 * q1.x + b1 * q1.y + c1;\n  r4 = a1 * q2.x + b1 * q2.y + c1;\n\n  // Check signs of r3 and r4. If both point 3 and point 4 lie on\n  // same side of line 1, the line segments do not intersect.\n  if (r3 !== 0 && r4 !== 0 && sameSign(r3, r4)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Compute a2, b2, c2 where line joining points 3 and 4 is G(x,y) = a2 x + b2 y + c2 = 0\n  a2 = q2.y - q1.y;\n  b2 = q1.x - q2.x;\n  c2 = q2.x * q1.y - q1.x * q2.y;\n\n  // Compute r1 and r2\n  r1 = a2 * p1.x + b2 * p1.y + c2;\n  r2 = a2 * p2.x + b2 * p2.y + c2;\n\n  // Check signs of r1 and r2. If both point 1 and point 2 lie\n  // on same side of second line segment, the line segments do\n  // not intersect.\n  if (r1 !== 0 && r2 !== 0 && sameSign(r1, r2)) {\n    return /*DONT_INTERSECT*/;\n  }\n\n  // Line segments intersect: compute intersection point.\n  denom = a1 * b2 - a2 * b1;\n  if (denom === 0) {\n    return /*COLLINEAR*/;\n  }\n\n  offset = Math.abs(denom / 2);\n\n  // The denom/2 is to get rounding instead of truncating. It\n  // is added or subtracted to the numerator, depending upon the\n  // sign of the numerator.\n  num = b1 * c2 - b2 * c1;\n  x = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  num = a2 * c1 - a1 * c2;\n  y = num < 0 ? (num - offset) / denom : (num + offset) / denom;\n\n  return { x: x, y: y };\n}\n\nfunction sameSign(r1, r2) {\n  return r1 * r2 > 0;\n}\n","import { intersectLine } from './intersect-line.js';\n\nexport { intersectPolygon };\n\n/*\n * Returns the point ({x, y}) at which the point argument intersects with the\n * node argument assuming that it has the shape specified by polygon.\n */\nfunction intersectPolygon(node, polyPoints, point) {\n  var x1 = node.x;\n  var y1 = node.y;\n\n  var intersections = [];\n\n  var minX = Number.POSITIVE_INFINITY;\n  var minY = Number.POSITIVE_INFINITY;\n  polyPoints.forEach(function (entry) {\n    minX = Math.min(minX, entry.x);\n    minY = Math.min(minY, entry.y);\n  });\n\n  var left = x1 - node.width / 2 - minX;\n  var top = y1 - node.height / 2 - minY;\n\n  for (var i = 0; i < polyPoints.length; i++) {\n    var p1 = polyPoints[i];\n    var p2 = polyPoints[i < polyPoints.length - 1 ? i + 1 : 0];\n    var intersect = intersectLine(\n      node,\n      point,\n      { x: left + p1.x, y: top + p1.y },\n      { x: left + p2.x, y: top + p2.y }\n    );\n    if (intersect) {\n      intersections.push(intersect);\n    }\n  }\n\n  if (!intersections.length) {\n    console.log('NO INTERSECTION FOUND, RETURN NODE CENTER', node);\n    return node;\n  }\n\n  if (intersections.length > 1) {\n    // More intersections, find the one nearest to edge end point\n    intersections.sort(function (p, q) {\n      var pdx = p.x - point.x;\n      var pdy = p.y - point.y;\n      var distp = Math.sqrt(pdx * pdx + pdy * pdy);\n\n      var qdx = q.x - point.x;\n      var qdy = q.y - point.y;\n      var distq = Math.sqrt(qdx * qdx + qdy * qdy);\n\n      return distp < distq ? -1 : distp === distq ? 0 : 1;\n    });\n  }\n  return intersections[0];\n}\n","export { intersectRect };\n\nfunction intersectRect(node, point) {\n  var x = node.x;\n  var y = node.y;\n\n  // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = node.width / 2;\n  var h = node.height / 2;\n\n  var sx, sy;\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n    sx = dy === 0 ? 0 : (h * dx) / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n    sx = w;\n    sy = dx === 0 ? 0 : (w * dy) / dx;\n  }\n\n  return { x: x + sx, y: y + sy };\n}\n","import * as util from '../util.js';\n\nexport { addHtmlLabel };\n\nfunction addHtmlLabel(root, node) {\n  var fo = root.append('foreignObject').attr('width', '100000');\n\n  var div = fo.append('xhtml:div');\n  div.attr('xmlns', 'http://www.w3.org/1999/xhtml');\n\n  var label = node.label;\n  switch (typeof label) {\n    case 'function':\n      div.insert(label);\n      break;\n    case 'object':\n      // Currently we assume this is a DOM object.\n      div.insert(function () {\n        return label;\n      });\n      break;\n    default:\n      div.html(label);\n  }\n\n  util.applyStyle(div, node.labelStyle);\n  div.style('display', 'inline-block');\n  // Fix for firefox\n  div.style('white-space', 'nowrap');\n\n  var client = div.node().getBoundingClientRect();\n  fo.attr('width', client.width).attr('height', client.height);\n\n  return fo;\n}\n","import * as _ from 'lodash-es';\n\n// Public utility functions\nexport { isSubgraph, edgeToId, applyStyle, applyClass, applyTransition };\n\n/*\n * Returns true if the specified node in the graph is a subgraph node. A\n * subgraph node is one that contains other nodes.\n */\nfunction isSubgraph(g, v) {\n  return !!g.children(v).length;\n}\n\nfunction edgeToId(e) {\n  return escapeId(e.v) + ':' + escapeId(e.w) + ':' + escapeId(e.name);\n}\n\nvar ID_DELIM = /:/g;\nfunction escapeId(str) {\n  return str ? String(str).replace(ID_DELIM, '\\\\:') : '';\n}\n\nfunction applyStyle(dom, styleFn) {\n  if (styleFn) {\n    dom.attr('style', styleFn);\n  }\n}\n\nfunction applyClass(dom, classFn, otherClasses) {\n  if (classFn) {\n    dom.attr('class', classFn).attr('class', otherClasses + ' ' + dom.attr('class'));\n  }\n}\n\nfunction applyTransition(selection, g) {\n  var graph = g.graph();\n\n  if (_.isPlainObject(graph)) {\n    var transition = graph.transition;\n    if (_.isFunction(transition)) {\n      return transition(selection);\n    }\n  }\n\n  return selection;\n}\n","import * as _ from 'lodash-es';\nimport { Graph } from './graph.js';\n\nexport { write, read };\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound(),\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g),\n  };\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v);\n    var parent = g.parent(v);\n    var node = { v: v };\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e);\n    var edge = { v: e.v, w: e.w };\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n  _.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n  _.each(json.edges, function (entry) {\n    g.setEdge({ v: entry.v, w: entry.w, name: entry.name }, entry.value);\n  });\n  return g;\n}\n","import * as util from './util.js';\n\nexport { arrows, setArrows };\n\nvar arrows = {\n  normal,\n  vee,\n  undirected,\n};\n\nfunction setArrows(value) {\n  arrows = value;\n}\n\nfunction normal(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction vee(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 0 L 10 5 L 0 10 L 4 5 z')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n\nfunction undirected(parent, id, edge, type) {\n  var marker = parent\n    .append('marker')\n    .attr('id', id)\n    .attr('viewBox', '0 0 10 10')\n    .attr('refX', 9)\n    .attr('refY', 5)\n    .attr('markerUnits', 'strokeWidth')\n    .attr('markerWidth', 8)\n    .attr('markerHeight', 6)\n    .attr('orient', 'auto');\n\n  var path = marker\n    .append('path')\n    .attr('d', 'M 0 5 L 10 5')\n    .style('stroke-width', 1)\n    .style('stroke-dasharray', '1,0');\n  util.applyStyle(path, edge[type + 'Style']);\n  if (edge[type + 'Class']) {\n    path.attr('class', edge[type + 'Class']);\n  }\n}\n","import { addHtmlLabel } from './add-html-label.js';\nimport { addSVGLabel } from './add-svg-label.js';\nimport { addTextLabel } from './add-text-label.js';\n\nexport { addLabel };\n\nfunction addLabel(root, node, location) {\n  var label = node.label;\n  var labelSvg = root.append('g');\n\n  // Allow the label to be a string, a function that returns a DOM element, or\n  // a DOM element itself.\n  if (node.labelType === 'svg') {\n    addSVGLabel(labelSvg, node);\n  } else if (typeof label !== 'string' || node.labelType === 'html') {\n    addHtmlLabel(labelSvg, node);\n  } else {\n    addTextLabel(labelSvg, node);\n  }\n\n  var labelBBox = labelSvg.node().getBBox();\n  var y;\n  switch (location) {\n    case 'top':\n      y = -node.height / 2;\n      break;\n    case 'bottom':\n      y = node.height / 2 - labelBBox.height;\n      break;\n    default:\n      y = -labelBBox.height / 2;\n  }\n  labelSvg.attr('transform', 'translate(' + -labelBBox.width / 2 + ',' + y + ')');\n\n  return labelSvg;\n}\n","import * as util from '../util.js';\n\nexport { addSVGLabel };\n\nfunction addSVGLabel(root, node) {\n  var domNode = root;\n\n  domNode.node().appendChild(node.label);\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n","import * as util from '../util.js';\n\nexport { addTextLabel };\n\n/*\n * Attaches a text label to the specified root. Handles escape sequences.\n */\nfunction addTextLabel(root, node) {\n  var domNode = root.append('text');\n\n  var lines = processEscapeSequences(node.label).split('\\n');\n  for (var i = 0; i < lines.length; i++) {\n    domNode\n      .append('tspan')\n      .attr('xml:space', 'preserve')\n      .attr('dy', '1em')\n      .attr('x', '1')\n      .text(lines[i]);\n  }\n\n  util.applyStyle(domNode, node.labelStyle);\n\n  return domNode;\n}\n\nfunction processEscapeSequences(text) {\n  var newText = '';\n  var escaped = false;\n  var ch;\n  for (var i = 0; i < text.length; ++i) {\n    ch = text[i];\n    if (escaped) {\n      switch (ch) {\n        case 'n':\n          newText += '\\n';\n          break;\n        default:\n          newText += ch;\n      }\n      escaped = false;\n    } else if (ch === '\\\\') {\n      escaped = true;\n    } else {\n      newText += ch;\n    }\n  }\n  return newText;\n}\n","import * as d3 from 'd3';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createClusters, setCreateClusters };\n\nvar createClusters = function (selection, g) {\n  var clusters = g.nodes().filter(function (v) {\n    return util.isSubgraph(g, v);\n  });\n  var svgClusters = selection.selectAll('g.cluster').data(clusters, function (v) {\n    return v;\n  });\n\n  util.applyTransition(svgClusters.exit(), g).style('opacity', 0).remove();\n\n  var enterSelection = svgClusters\n    .enter()\n    .append('g')\n    .attr('class', 'cluster')\n    .attr('id', function (v) {\n      var node = g.node(v);\n      return node.id;\n    })\n    .style('opacity', 0)\n    .each(function (v) {\n      var node = g.node(v);\n      var thisGroup = d3.select(this);\n      d3.select(this).append('rect');\n      var labelGroup = thisGroup.append('g').attr('class', 'label');\n      addLabel(labelGroup, node, node.clusterLabelPos);\n    });\n\n  svgClusters = svgClusters.merge(enterSelection);\n\n  svgClusters = util.applyTransition(svgClusters, g).style('opacity', 1);\n\n  svgClusters.selectAll('rect').each(function (c) {\n    var node = g.node(c);\n    var domCluster = d3.select(this);\n    util.applyStyle(domCluster, node.style);\n  });\n\n  return svgClusters;\n};\n\nfunction setCreateClusters(value) {\n  createClusters = value;\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createEdgeLabels, setCreateEdgeLabels };\n\nlet createEdgeLabels = function (selection, g) {\n  var svgEdgeLabels = selection\n    .selectAll('g.edgeLabel')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  svgEdgeLabels.exit().remove();\n  svgEdgeLabels.enter().append('g').classed('edgeLabel', true).style('opacity', 0);\n\n  svgEdgeLabels = selection.selectAll('g.edgeLabel');\n\n  svgEdgeLabels.each(function (e) {\n    var root = d3.select(this);\n    root.select('.label').remove();\n    var edge = g.edge(e);\n    var label = addLabel(root, g.edge(e), 0).classed('label', true);\n    var bbox = label.node().getBBox();\n\n    if (edge.labelId) {\n      label.attr('id', edge.labelId);\n    }\n    if (!_.has(edge, 'width')) {\n      edge.width = bbox.width;\n    }\n    if (!_.has(edge, 'height')) {\n      edge.height = bbox.height;\n    }\n  });\n\n  var exitSelection;\n\n  if (svgEdgeLabels.exit) {\n    exitSelection = svgEdgeLabels.exit();\n  } else {\n    exitSelection = svgEdgeLabels.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgEdgeLabels;\n};\n\nfunction setCreateEdgeLabels(value) {\n  createEdgeLabels = value;\n}\n","export { intersectNode };\n\nfunction intersectNode(node, point) {\n  return node.intersect(point);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { intersectNode } from './intersect/intersect-node.js';\nimport * as util from './util.js';\n\nexport { createEdgePaths, setCreateEdgePaths };\n\nvar createEdgePaths = function (selection, g, arrows) {\n  var previousPaths = selection\n    .selectAll('g.edgePath')\n    .data(g.edges(), function (e) {\n      return util.edgeToId(e);\n    })\n    .classed('update', true);\n\n  var newPaths = enter(previousPaths, g);\n  exit(previousPaths, g);\n\n  var svgPaths = previousPaths.merge !== undefined ? previousPaths.merge(newPaths) : previousPaths;\n  util.applyTransition(svgPaths, g).style('opacity', 1);\n\n  // Save DOM element in the path group, and set ID and class\n  svgPaths.each(function (e) {\n    var domEdge = d3.select(this);\n    var edge = g.edge(e);\n    edge.elem = this;\n\n    if (edge.id) {\n      domEdge.attr('id', edge.id);\n    }\n\n    util.applyClass(\n      domEdge,\n      edge['class'],\n      (domEdge.classed('update') ? 'update ' : '') + 'edgePath'\n    );\n  });\n\n  svgPaths.selectAll('path.path').each(function (e) {\n    var edge = g.edge(e);\n    edge.arrowheadId = _.uniqueId('arrowhead');\n\n    var domEdge = d3\n      .select(this)\n      .attr('marker-end', function () {\n        return 'url(' + makeFragmentRef(location.href, edge.arrowheadId) + ')';\n      })\n      .style('fill', 'none');\n\n    util.applyTransition(domEdge, g).attr('d', function (e) {\n      return calcPoints(g, e);\n    });\n\n    util.applyStyle(domEdge, edge.style);\n  });\n\n  svgPaths.selectAll('defs *').remove();\n  svgPaths.selectAll('defs').each(function (e) {\n    var edge = g.edge(e);\n    var arrowhead = arrows[edge.arrowhead];\n    arrowhead(d3.select(this), edge.arrowheadId, edge, 'arrowhead');\n  });\n\n  return svgPaths;\n};\n\nfunction setCreateEdgePaths(value) {\n  createEdgePaths = value;\n}\n\nfunction makeFragmentRef(url, fragmentId) {\n  var baseUrl = url.split('#')[0];\n  return baseUrl + '#' + fragmentId;\n}\n\nfunction calcPoints(g, e) {\n  var edge = g.edge(e);\n  var tail = g.node(e.v);\n  var head = g.node(e.w);\n  var points = edge.points.slice(1, edge.points.length - 1);\n  points.unshift(intersectNode(tail, points[0]));\n  points.push(intersectNode(head, points[points.length - 1]));\n\n  return createLine(edge, points);\n}\n\nfunction createLine(edge, points) {\n  // @ts-expect-error\n  var line = (d3.line || d3.svg.line)()\n    .x(function (d) {\n      return d.x;\n    })\n    .y(function (d) {\n      return d.y;\n    });\n\n  (line.curve || line.interpolate)(edge.curve);\n\n  return line(points);\n}\n\nfunction getCoords(elem) {\n  var bbox = elem.getBBox();\n  var matrix = elem.ownerSVGElement\n    .getScreenCTM()\n    .inverse()\n    .multiply(elem.getScreenCTM())\n    .translate(bbox.width / 2, bbox.height / 2);\n  return { x: matrix.e, y: matrix.f };\n}\n\nfunction enter(svgPaths, g) {\n  var svgPathsEnter = svgPaths.enter().append('g').attr('class', 'edgePath').style('opacity', 0);\n  svgPathsEnter\n    .append('path')\n    .attr('class', 'path')\n    .attr('d', function (e) {\n      var edge = g.edge(e);\n      var sourceElem = g.node(e.v).elem;\n      var points = _.range(edge.points.length).map(function () {\n        return getCoords(sourceElem);\n      });\n      return createLine(edge, points);\n    });\n  svgPathsEnter.append('defs');\n  return svgPathsEnter;\n}\n\nfunction exit(svgPaths, g) {\n  var svgPathExit = svgPaths.exit();\n  util.applyTransition(svgPathExit, g).style('opacity', 0).remove();\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { addLabel } from './label/add-label.js';\nimport * as util from './util.js';\n\nexport { createNodes, setCreateNodes };\n\nvar createNodes = function (selection, g, shapes) {\n  var simpleNodes = g.nodes().filter(function (v) {\n    return !util.isSubgraph(g, v);\n  });\n  var svgNodes = selection\n    .selectAll('g.node')\n    .data(simpleNodes, function (v) {\n      return v;\n    })\n    .classed('update', true);\n\n  svgNodes.exit().remove();\n\n  svgNodes.enter().append('g').attr('class', 'node').style('opacity', 0);\n\n  svgNodes = selection.selectAll('g.node');\n\n  svgNodes.each(function (v) {\n    var node = g.node(v);\n    var thisGroup = d3.select(this);\n    util.applyClass(\n      thisGroup,\n      node['class'],\n      (thisGroup.classed('update') ? 'update ' : '') + 'node'\n    );\n\n    thisGroup.select('g.label').remove();\n    var labelGroup = thisGroup.append('g').attr('class', 'label');\n    var labelDom = addLabel(labelGroup, node);\n    var shape = shapes[node.shape];\n    var bbox = _.pick(labelDom.node().getBBox(), 'width', 'height');\n\n    node.elem = this;\n\n    if (node.id) {\n      thisGroup.attr('id', node.id);\n    }\n    if (node.labelId) {\n      labelGroup.attr('id', node.labelId);\n    }\n\n    if (_.has(node, 'width')) {\n      bbox.width = node.width;\n    }\n    if (_.has(node, 'height')) {\n      bbox.height = node.height;\n    }\n\n    bbox.width += node.paddingLeft + node.paddingRight;\n    bbox.height += node.paddingTop + node.paddingBottom;\n    labelGroup.attr(\n      'transform',\n      'translate(' +\n        (node.paddingLeft - node.paddingRight) / 2 +\n        ',' +\n        (node.paddingTop - node.paddingBottom) / 2 +\n        ')'\n    );\n\n    var root = d3.select(this);\n    root.select('.label-container').remove();\n    var shapeSvg = shape(root, bbox, node).classed('label-container', true);\n    util.applyStyle(shapeSvg, node.style);\n\n    var shapeBBox = shapeSvg.node().getBBox();\n    node.width = shapeBBox.width;\n    node.height = shapeBBox.height;\n  });\n\n  var exitSelection;\n\n  if (svgNodes.exit) {\n    exitSelection = svgNodes.exit();\n  } else {\n    exitSelection = svgNodes.selectAll(null); // empty selection\n  }\n\n  util.applyTransition(exitSelection, g).style('opacity', 0).remove();\n\n  return svgNodes;\n};\n\nfunction setCreateNodes(value) {\n  createNodes = value;\n}\n","export { intersectEllipse };\n\nfunction intersectEllipse(node, rx, ry, point) {\n  // Formulae from: http://mathworld.wolfram.com/Ellipse-LineIntersection.html\n\n  var cx = node.x;\n  var cy = node.y;\n\n  var px = cx - point.x;\n  var py = cy - point.y;\n\n  var det = Math.sqrt(rx * rx * py * py + ry * ry * px * px);\n\n  var dx = Math.abs((rx * ry * px) / det);\n  if (point.x < cx) {\n    dx = -dx;\n  }\n  var dy = Math.abs((rx * ry * py) / det);\n  if (point.y < cy) {\n    dy = -dy;\n  }\n\n  return { x: cx + dx, y: cy + dy };\n}\n","import { intersectCircle } from './intersect/intersect-circle.js';\nimport { intersectEllipse } from './intersect/intersect-ellipse.js';\nimport { intersectPolygon } from './intersect/intersect-polygon.js';\nimport { intersectRect } from './intersect/intersect-rect.js';\n\nexport { shapes, setShapes };\n\nvar shapes = {\n  rect,\n  ellipse,\n  circle,\n  diamond,\n};\n\nfunction setShapes(value) {\n  shapes = value;\n}\n\nfunction rect(parent, bbox, node) {\n  var shapeSvg = parent\n    .insert('rect', ':first-child')\n    .attr('rx', node.rx)\n    .attr('ry', node.ry)\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('width', bbox.width)\n    .attr('height', bbox.height);\n\n  node.intersect = function (point) {\n    return intersectRect(node, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction ellipse(parent, bbox, node) {\n  var rx = bbox.width / 2;\n  var ry = bbox.height / 2;\n  var shapeSvg = parent\n    .insert('ellipse', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('rx', rx)\n    .attr('ry', ry);\n\n  node.intersect = function (point) {\n    return intersectEllipse(node, rx, ry, point);\n  };\n\n  return shapeSvg;\n}\n\nfunction circle(parent, bbox, node) {\n  var r = Math.max(bbox.width, bbox.height) / 2;\n  var shapeSvg = parent\n    .insert('circle', ':first-child')\n    .attr('x', -bbox.width / 2)\n    .attr('y', -bbox.height / 2)\n    .attr('r', r);\n\n  node.intersect = function (point) {\n    return intersectCircle(node, r, point);\n  };\n\n  return shapeSvg;\n}\n\n// Circumscribe an ellipse for the bounding box with a diamond shape. I derived\n// the function to calculate the diamond shape from:\n// http://mathforum.org/kb/message.jspa?messageID=3750236\nfunction diamond(parent, bbox, node) {\n  var w = (bbox.width * Math.SQRT2) / 2;\n  var h = (bbox.height * Math.SQRT2) / 2;\n  var points = [\n    { x: 0, y: -h },\n    { x: -w, y: 0 },\n    { x: 0, y: h },\n    { x: w, y: 0 },\n  ];\n  var shapeSvg = parent.insert('polygon', ':first-child').attr(\n    'points',\n    points\n      .map(function (p) {\n        return p.x + ',' + p.y;\n      })\n      .join(' ')\n  );\n\n  node.intersect = function (p) {\n    return intersectPolygon(node, points, p);\n  };\n\n  return shapeSvg;\n}\n","import { intersectEllipse } from './intersect-ellipse.js';\n\nexport { intersectCircle };\n\nfunction intersectCircle(node, rx, point) {\n  return intersectEllipse(node, rx, rx, point);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport { layout } from '../dagre/index.js';\nimport { arrows, setArrows } from './arrows.js';\nimport { createClusters, setCreateClusters } from './create-clusters.js';\nimport { createEdgeLabels, setCreateEdgeLabels } from './create-edge-labels.js';\nimport { createEdgePaths, setCreateEdgePaths } from './create-edge-paths.js';\nimport { createNodes, setCreateNodes } from './create-nodes.js';\nimport { positionClusters } from './position-clusters.js';\nimport { positionEdgeLabels } from './position-edge-labels.js';\nimport { positionNodes } from './position-nodes.js';\nimport { shapes, setShapes } from './shapes.js';\n\nexport { render };\n\n// This design is based on http://bost.ocks.org/mike/chart/.\nfunction render() {\n  var fn = function (svg, g) {\n    preProcessGraph(g);\n\n    var outputGroup = createOrSelectGroup(svg, 'output');\n    var clustersGroup = createOrSelectGroup(outputGroup, 'clusters');\n    var edgePathsGroup = createOrSelectGroup(outputGroup, 'edgePaths');\n    var edgeLabels = createEdgeLabels(createOrSelectGroup(outputGroup, 'edgeLabels'), g);\n    var nodes = createNodes(createOrSelectGroup(outputGroup, 'nodes'), g, shapes);\n\n    layout(g);\n\n    positionNodes(nodes, g);\n    positionEdgeLabels(edgeLabels, g);\n    createEdgePaths(edgePathsGroup, g, arrows);\n\n    var clusters = createClusters(clustersGroup, g);\n    positionClusters(clusters, g);\n\n    postProcessGraph(g);\n  };\n\n  fn.createNodes = function (value) {\n    if (!arguments.length) return createNodes;\n    setCreateNodes(value);\n    return fn;\n  };\n\n  fn.createClusters = function (value) {\n    if (!arguments.length) return createClusters;\n    setCreateClusters(value);\n    return fn;\n  };\n\n  fn.createEdgeLabels = function (value) {\n    if (!arguments.length) return createEdgeLabels;\n    setCreateEdgeLabels(value);\n    return fn;\n  };\n\n  fn.createEdgePaths = function (value) {\n    if (!arguments.length) return createEdgePaths;\n    setCreateEdgePaths(value);\n    return fn;\n  };\n\n  fn.shapes = function (value) {\n    if (!arguments.length) return shapes;\n    setShapes(value);\n    return fn;\n  };\n\n  fn.arrows = function (value) {\n    if (!arguments.length) return arrows;\n    setArrows(value);\n    return fn;\n  };\n\n  return fn;\n}\n\nvar NODE_DEFAULT_ATTRS = {\n  paddingLeft: 10,\n  paddingRight: 10,\n  paddingTop: 10,\n  paddingBottom: 10,\n  rx: 0,\n  ry: 0,\n  shape: 'rect',\n};\n\nvar EDGE_DEFAULT_ATTRS = {\n  arrowhead: 'normal',\n  curve: d3.curveLinear,\n};\n\nfunction preProcessGraph(g) {\n  g.nodes().forEach(function (v) {\n    var node = g.node(v);\n    if (!_.has(node, 'label') && !g.children(v).length) {\n      node.label = v;\n    }\n\n    if (_.has(node, 'paddingX')) {\n      _.defaults(node, {\n        paddingLeft: node.paddingX,\n        paddingRight: node.paddingX,\n      });\n    }\n\n    if (_.has(node, 'paddingY')) {\n      _.defaults(node, {\n        paddingTop: node.paddingY,\n        paddingBottom: node.paddingY,\n      });\n    }\n\n    if (_.has(node, 'padding')) {\n      _.defaults(node, {\n        paddingLeft: node.padding,\n        paddingRight: node.padding,\n        paddingTop: node.padding,\n        paddingBottom: node.padding,\n      });\n    }\n\n    _.defaults(node, NODE_DEFAULT_ATTRS);\n\n    _.each(['paddingLeft', 'paddingRight', 'paddingTop', 'paddingBottom'], function (k) {\n      node[k] = Number(node[k]);\n    });\n\n    // Save dimensions for restore during post-processing\n    if (_.has(node, 'width')) {\n      node._prevWidth = node.width;\n    }\n    if (_.has(node, 'height')) {\n      node._prevHeight = node.height;\n    }\n  });\n\n  g.edges().forEach(function (e) {\n    var edge = g.edge(e);\n    if (!_.has(edge, 'label')) {\n      edge.label = '';\n    }\n    _.defaults(edge, EDGE_DEFAULT_ATTRS);\n  });\n}\n\nfunction postProcessGraph(g) {\n  _.each(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    // Restore original dimensions\n    if (_.has(node, '_prevWidth')) {\n      node.width = node._prevWidth;\n    } else {\n      delete node.width;\n    }\n\n    if (_.has(node, '_prevHeight')) {\n      node.height = node._prevHeight;\n    } else {\n      delete node.height;\n    }\n\n    delete node._prevWidth;\n    delete node._prevHeight;\n  });\n}\n\nfunction createOrSelectGroup(root, name) {\n  var selection = root.select('g.' + name);\n  if (selection.empty()) {\n    selection = root.append('g').attr('class', name);\n  }\n  return selection;\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionNodes };\n\nfunction positionNodes(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import * as d3 from 'd3';\nimport * as _ from 'lodash-es';\nimport * as util from './util.js';\n\nexport { positionEdgeLabels };\n\nfunction positionEdgeLabels(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(e) {\n    var edge = g.edge(e);\n    return _.has(edge, 'x') ? 'translate(' + edge.x + ',' + edge.y + ')' : '';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n}\n","import * as d3 from 'd3';\nimport * as util from './util.js';\n\nexport { positionClusters };\n\nfunction positionClusters(selection, g) {\n  var created = selection.filter(function () {\n    return !d3.select(this).classed('update');\n  });\n\n  function translate(v) {\n    var node = g.node(v);\n    return 'translate(' + node.x + ',' + node.y + ')';\n  }\n\n  created.attr('transform', translate);\n\n  util.applyTransition(selection, g).style('opacity', 1).attr('transform', translate);\n\n  util\n    .applyTransition(created.selectAll('rect'), g)\n    .attr('width', function (v) {\n      return g.node(v).width;\n    })\n    .attr('height', function (v) {\n      return g.node(v).height;\n    })\n    .attr('x', function (v) {\n      var node = g.node(v);\n      return -node.width / 2;\n    })\n    .attr('y', function (v) {\n      var node = g.node(v);\n      return -node.height / 2;\n    });\n}\n","/* IMPORT */\nimport _ from '../utils/index.js';\nimport Color from '../color/index.js';\n/* MAIN */\nconst channel = (color, channel) => {\n    return _.lang.round(Color.parse(color)[channel]);\n};\n/* EXPORT */\nexport default channel;\n","import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n"],"names":["intersectLine","p1","p2","q1","q2","a1","a2","b1","b2","c1","c2","r1","r2","r3","r4","denom","offset","num","y","x","sameSign","Math","abs","intersectPolygon","node","polyPoints","point","x1","y1","intersections","minX","Number","POSITIVE_INFINITY","minY","forEach","entry","min","left","width","top","height","i","length","intersect","push","sort","p","q","pdx","pdy","distp","sqrt","qdx","qdy","distq","console","log","intersectRect","sx","sy","dx","dy","w","h","addHtmlLabel","root","fo","append","attr","div","label","insert","html","labelStyle","style","client","getBoundingClientRect","isSubgraph","g","v","children","edgeToId","e","escapeId","name","ID_DELIM","str","String","replace","applyStyle","dom","styleFn","applyClass","classFn","otherClasses","applyTransition","selection","graph","transition","write","json","options","directed","isDirected","multigraph","isMultigraph","compound","isCompound","nodes","writeNodes","edges","writeEdges","value","nodeValue","parent","edgeValue","edge","arrows","normal","id","type","path","util","vee","undirected","addLabel","location","labelSvg","labelType","domNode","appendChild","addSVGLabel","a","lines","text","ch","newText","escaped","processEscapeSequences","split","addTextLabel","labelBBox","getBBox","createClusters","clusters","filter","svgClusters","selectAll","data","exit","remove","enterSelection","enter","each","thisGroup","this","clusterLabelPos","merge","c","domCluster","createEdgeLabels","exitSelection","svgEdgeLabels","classed","select","bbox","labelId","intersectNode","createEdgePaths","previousPaths","newPaths","svgPaths","svgPathsEnter","sourceElem","elem","createLine","points","map","matrix","ownerSVGElement","getScreenCTM","inverse","multiply","translate","f","svgPathExit","undefined","domEdge","arrowheadId","url","href","fragmentId","tail","head","slice","unshift","calcPoints","arrowhead","line","d","curve","interpolate","createNodes","shapes","simpleNodes","svgNodes","labelGroup","labelDom","shape","paddingLeft","paddingRight","paddingTop","paddingBottom","shapeSvg","shapeBBox","intersectEllipse","rx","ry","cx","cy","px","py","det","rect","ellipse","circle","r","max","intersectCircle","diamond","SQRT2","join","render","fn","svg","paddingX","paddingY","padding","NODE_DEFAULT_ATTRS","k","_prevWidth","_prevHeight","EDGE_DEFAULT_ATTRS","preProcessGraph","outputGroup","createOrSelectGroup","clustersGroup","edgePathsGroup","edgeLabels","positionNodes","positionEdgeLabels","created","positionClusters","postProcessGraph","arguments","setCreateNodes","setCreateClusters","setCreateEdgeLabels","setCreateEdgePaths","setShapes","setArrows","empty","color","channel","lang","round","parse"],"sourceRoot":""}