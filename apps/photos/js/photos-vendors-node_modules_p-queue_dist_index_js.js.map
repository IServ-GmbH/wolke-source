{"version":3,"file":"photos-vendors-node_modules_p-queue_dist_index_js.js?v=d0839078d10d361ea21f","mappings":"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","sources":["webpack:///photos/node_modules/p-timeout/index.js","webpack:///photos/node_modules/p-queue/dist/priority-queue.js","webpack:///photos/node_modules/p-queue/dist/lower-bound.js","webpack:///photos/node_modules/p-queue/dist/index.js","webpack:///photos/node_modules/p-queue/node_modules/eventemitter3/index.js"],"sourcesContent":["export class TimeoutError extends Error {\n\tconstructor(message) {\n\t\tsuper(message);\n\t\tthis.name = 'TimeoutError';\n\t}\n}\n\n/**\nAn error to be thrown when the request is aborted by AbortController.\nDOMException is thrown instead of this Error when DOMException is available.\n*/\nexport class AbortError extends Error {\n\tconstructor(message) {\n\t\tsuper();\n\t\tthis.name = 'AbortError';\n\t\tthis.message = message;\n\t}\n}\n\n/**\nTODO: Remove AbortError and just throw DOMException when targeting Node 18.\n*/\nconst getDOMException = errorMessage => globalThis.DOMException === undefined\n\t? new AbortError(errorMessage)\n\t: new DOMException(errorMessage);\n\n/**\nTODO: Remove below function and just 'reject(signal.reason)' when targeting Node 18.\n*/\nconst getAbortedReason = signal => {\n\tconst reason = signal.reason === undefined\n\t\t? getDOMException('This operation was aborted.')\n\t\t: signal.reason;\n\n\treturn reason instanceof Error ? reason : getDOMException(reason);\n};\n\nexport default function pTimeout(promise, options) {\n\tconst {\n\t\tmilliseconds,\n\t\tfallback,\n\t\tmessage,\n\t\tcustomTimers = {setTimeout, clearTimeout},\n\t} = options;\n\n\tlet timer;\n\n\tconst wrappedPromise = new Promise((resolve, reject) => {\n\t\tif (typeof milliseconds !== 'number' || Math.sign(milliseconds) !== 1) {\n\t\t\tthrow new TypeError(`Expected \\`milliseconds\\` to be a positive number, got \\`${milliseconds}\\``);\n\t\t}\n\n\t\tif (options.signal) {\n\t\t\tconst {signal} = options;\n\t\t\tif (signal.aborted) {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t}\n\n\t\t\tsignal.addEventListener('abort', () => {\n\t\t\t\treject(getAbortedReason(signal));\n\t\t\t});\n\t\t}\n\n\t\tif (milliseconds === Number.POSITIVE_INFINITY) {\n\t\t\tpromise.then(resolve, reject);\n\t\t\treturn;\n\t\t}\n\n\t\t// We create the error outside of `setTimeout` to preserve the stack trace.\n\t\tconst timeoutError = new TimeoutError();\n\n\t\ttimer = customTimers.setTimeout.call(undefined, () => {\n\t\t\tif (fallback) {\n\t\t\t\ttry {\n\t\t\t\t\tresolve(fallback());\n\t\t\t\t} catch (error) {\n\t\t\t\t\treject(error);\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof promise.cancel === 'function') {\n\t\t\t\tpromise.cancel();\n\t\t\t}\n\n\t\t\tif (message === false) {\n\t\t\t\tresolve();\n\t\t\t} else if (message instanceof Error) {\n\t\t\t\treject(message);\n\t\t\t} else {\n\t\t\t\ttimeoutError.message = message ?? `Promise timed out after ${milliseconds} milliseconds`;\n\t\t\t\treject(timeoutError);\n\t\t\t}\n\t\t}, milliseconds);\n\n\t\t(async () => {\n\t\t\ttry {\n\t\t\t\tresolve(await promise);\n\t\t\t} catch (error) {\n\t\t\t\treject(error);\n\t\t\t}\n\t\t})();\n\t});\n\n\tconst cancelablePromise = wrappedPromise.finally(() => {\n\t\tcancelablePromise.clear();\n\t});\n\n\tcancelablePromise.clear = () => {\n\t\tcustomTimers.clearTimeout.call(undefined, timer);\n\t\ttimer = undefined;\n\t};\n\n\treturn cancelablePromise;\n}\n","import lowerBound from './lower-bound.js';\nexport default class PriorityQueue {\n    #queue = [];\n    enqueue(run, options) {\n        options = {\n            priority: 0,\n            ...options,\n        };\n        const element = {\n            priority: options.priority,\n            id: options.id,\n            run,\n        };\n        if (this.size === 0 || this.#queue[this.size - 1].priority >= options.priority) {\n            this.#queue.push(element);\n            return;\n        }\n        const index = lowerBound(this.#queue, element, (a, b) => b.priority - a.priority);\n        this.#queue.splice(index, 0, element);\n    }\n    setPriority(id, priority) {\n        const index = this.#queue.findIndex((element) => element.id === id);\n        if (index === -1) {\n            throw new ReferenceError(`No promise function with the id \"${id}\" exists in the queue.`);\n        }\n        const [item] = this.#queue.splice(index, 1);\n        this.enqueue(item.run, { priority, id });\n    }\n    dequeue() {\n        const item = this.#queue.shift();\n        return item?.run;\n    }\n    filter(options) {\n        return this.#queue.filter((element) => element.priority === options.priority).map((element) => element.run);\n    }\n    get size() {\n        return this.#queue.length;\n    }\n}\n","// Port of lower_bound from https://en.cppreference.com/w/cpp/algorithm/lower_bound\n// Used to compute insertion index to keep queue sorted after insertion\nexport default function lowerBound(array, value, comparator) {\n    let first = 0;\n    let count = array.length;\n    while (count > 0) {\n        const step = Math.trunc(count / 2);\n        let it = first + step;\n        if (comparator(array[it], value) <= 0) {\n            first = ++it;\n            count -= step + 1;\n        }\n        else {\n            count = step;\n        }\n    }\n    return first;\n}\n","import { EventEmitter } from 'eventemitter3';\nimport pTimeout, { TimeoutError } from 'p-timeout';\nimport PriorityQueue from './priority-queue.js';\n/**\nPromise queue with concurrency control.\n*/\nexport default class PQueue extends EventEmitter {\n    #carryoverConcurrencyCount;\n    #isIntervalIgnored;\n    #intervalCount = 0;\n    #intervalCap;\n    #interval;\n    #intervalEnd = 0;\n    #intervalId;\n    #timeoutId;\n    #queue;\n    #queueClass;\n    #pending = 0;\n    // The `!` is needed because of https://github.com/microsoft/TypeScript/issues/32194\n    #concurrency;\n    #isPaused;\n    #throwOnTimeout;\n    // Use to assign a unique identifier to a promise function, if not explicitly specified\n    #idAssigner = 1n;\n    /**\n    Per-operation timeout in milliseconds. Operations fulfill once `timeout` elapses if they haven't already.\n\n    Applies to each future operation.\n    */\n    timeout;\n    // TODO: The `throwOnTimeout` option should affect the return types of `add()` and `addAll()`\n    constructor(options) {\n        super();\n        // eslint-disable-next-line @typescript-eslint/consistent-type-assertions\n        options = {\n            carryoverConcurrencyCount: false,\n            intervalCap: Number.POSITIVE_INFINITY,\n            interval: 0,\n            concurrency: Number.POSITIVE_INFINITY,\n            autoStart: true,\n            queueClass: PriorityQueue,\n            ...options,\n        };\n        if (!(typeof options.intervalCap === 'number' && options.intervalCap >= 1)) {\n            throw new TypeError(`Expected \\`intervalCap\\` to be a number from 1 and up, got \\`${options.intervalCap?.toString() ?? ''}\\` (${typeof options.intervalCap})`);\n        }\n        if (options.interval === undefined || !(Number.isFinite(options.interval) && options.interval >= 0)) {\n            throw new TypeError(`Expected \\`interval\\` to be a finite number >= 0, got \\`${options.interval?.toString() ?? ''}\\` (${typeof options.interval})`);\n        }\n        this.#carryoverConcurrencyCount = options.carryoverConcurrencyCount;\n        this.#isIntervalIgnored = options.intervalCap === Number.POSITIVE_INFINITY || options.interval === 0;\n        this.#intervalCap = options.intervalCap;\n        this.#interval = options.interval;\n        this.#queue = new options.queueClass();\n        this.#queueClass = options.queueClass;\n        this.concurrency = options.concurrency;\n        this.timeout = options.timeout;\n        this.#throwOnTimeout = options.throwOnTimeout === true;\n        this.#isPaused = options.autoStart === false;\n    }\n    get #doesIntervalAllowAnother() {\n        return this.#isIntervalIgnored || this.#intervalCount < this.#intervalCap;\n    }\n    get #doesConcurrentAllowAnother() {\n        return this.#pending < this.#concurrency;\n    }\n    #next() {\n        this.#pending--;\n        this.#tryToStartAnother();\n        this.emit('next');\n    }\n    #onResumeInterval() {\n        this.#onInterval();\n        this.#initializeIntervalIfNeeded();\n        this.#timeoutId = undefined;\n    }\n    get #isIntervalPaused() {\n        const now = Date.now();\n        if (this.#intervalId === undefined) {\n            const delay = this.#intervalEnd - now;\n            if (delay < 0) {\n                // Act as the interval was done\n                // We don't need to resume it here because it will be resumed on line 160\n                this.#intervalCount = (this.#carryoverConcurrencyCount) ? this.#pending : 0;\n            }\n            else {\n                // Act as the interval is pending\n                if (this.#timeoutId === undefined) {\n                    this.#timeoutId = setTimeout(() => {\n                        this.#onResumeInterval();\n                    }, delay);\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    #tryToStartAnother() {\n        if (this.#queue.size === 0) {\n            // We can clear the interval (\"pause\")\n            // Because we can redo it later (\"resume\")\n            if (this.#intervalId) {\n                clearInterval(this.#intervalId);\n            }\n            this.#intervalId = undefined;\n            this.emit('empty');\n            if (this.#pending === 0) {\n                this.emit('idle');\n            }\n            return false;\n        }\n        if (!this.#isPaused) {\n            const canInitializeInterval = !this.#isIntervalPaused;\n            if (this.#doesIntervalAllowAnother && this.#doesConcurrentAllowAnother) {\n                const job = this.#queue.dequeue();\n                if (!job) {\n                    return false;\n                }\n                this.emit('active');\n                job();\n                if (canInitializeInterval) {\n                    this.#initializeIntervalIfNeeded();\n                }\n                return true;\n            }\n        }\n        return false;\n    }\n    #initializeIntervalIfNeeded() {\n        if (this.#isIntervalIgnored || this.#intervalId !== undefined) {\n            return;\n        }\n        this.#intervalId = setInterval(() => {\n            this.#onInterval();\n        }, this.#interval);\n        this.#intervalEnd = Date.now() + this.#interval;\n    }\n    #onInterval() {\n        if (this.#intervalCount === 0 && this.#pending === 0 && this.#intervalId) {\n            clearInterval(this.#intervalId);\n            this.#intervalId = undefined;\n        }\n        this.#intervalCount = this.#carryoverConcurrencyCount ? this.#pending : 0;\n        this.#processQueue();\n    }\n    /**\n    Executes all queued functions until it reaches the limit.\n    */\n    #processQueue() {\n        // eslint-disable-next-line no-empty\n        while (this.#tryToStartAnother()) { }\n    }\n    get concurrency() {\n        return this.#concurrency;\n    }\n    set concurrency(newConcurrency) {\n        if (!(typeof newConcurrency === 'number' && newConcurrency >= 1)) {\n            throw new TypeError(`Expected \\`concurrency\\` to be a number from 1 and up, got \\`${newConcurrency}\\` (${typeof newConcurrency})`);\n        }\n        this.#concurrency = newConcurrency;\n        this.#processQueue();\n    }\n    async #throwOnAbort(signal) {\n        return new Promise((_resolve, reject) => {\n            signal.addEventListener('abort', () => {\n                reject(signal.reason);\n            }, { once: true });\n        });\n    }\n    /**\n    Updates the priority of a promise function by its id, affecting its execution order. Requires a defined concurrency limit to take effect.\n\n    For example, this can be used to prioritize a promise function to run earlier.\n\n    ```js\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 1});\n\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦀', {priority: 0, id: '🦀'});\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦄', {priority: 1});\n\n    queue.setPriority('🦀', 2);\n    ```\n\n    In this case, the promise function with `id: '🦀'` runs second.\n\n    You can also deprioritize a promise function to delay its execution:\n\n    ```js\n    import PQueue from 'p-queue';\n\n    const queue = new PQueue({concurrency: 1});\n\n    queue.add(async () => '🦄', {priority: 1});\n    queue.add(async () => '🦀', {priority: 1, id: '🦀'});\n    queue.add(async () => '🦄');\n    queue.add(async () => '🦄', {priority: 0});\n\n    queue.setPriority('🦀', -1);\n    ```\n    Here, the promise function with `id: '🦀'` executes last.\n    */\n    setPriority(id, priority) {\n        this.#queue.setPriority(id, priority);\n    }\n    async add(function_, options = {}) {\n        // In case `id` is not defined.\n        options.id ??= (this.#idAssigner++).toString();\n        options = {\n            timeout: this.timeout,\n            throwOnTimeout: this.#throwOnTimeout,\n            ...options,\n        };\n        return new Promise((resolve, reject) => {\n            this.#queue.enqueue(async () => {\n                this.#pending++;\n                this.#intervalCount++;\n                try {\n                    options.signal?.throwIfAborted();\n                    let operation = function_({ signal: options.signal });\n                    if (options.timeout) {\n                        operation = pTimeout(Promise.resolve(operation), { milliseconds: options.timeout });\n                    }\n                    if (options.signal) {\n                        operation = Promise.race([operation, this.#throwOnAbort(options.signal)]);\n                    }\n                    const result = await operation;\n                    resolve(result);\n                    this.emit('completed', result);\n                }\n                catch (error) {\n                    if (error instanceof TimeoutError && !options.throwOnTimeout) {\n                        resolve();\n                        return;\n                    }\n                    reject(error);\n                    this.emit('error', error);\n                }\n                finally {\n                    this.#next();\n                }\n            }, options);\n            this.emit('add');\n            this.#tryToStartAnother();\n        });\n    }\n    async addAll(functions, options) {\n        return Promise.all(functions.map(async (function_) => this.add(function_, options)));\n    }\n    /**\n    Start (or resume) executing enqueued tasks within concurrency limit. No need to call this if queue is not paused (via `options.autoStart = false` or by `.pause()` method.)\n    */\n    start() {\n        if (!this.#isPaused) {\n            return this;\n        }\n        this.#isPaused = false;\n        this.#processQueue();\n        return this;\n    }\n    /**\n    Put queue execution on hold.\n    */\n    pause() {\n        this.#isPaused = true;\n    }\n    /**\n    Clear the queue.\n    */\n    clear() {\n        this.#queue = new this.#queueClass();\n    }\n    /**\n    Can be called multiple times. Useful if you for example add additional items at a later time.\n\n    @returns A promise that settles when the queue becomes empty.\n    */\n    async onEmpty() {\n        // Instantly resolve if the queue is empty\n        if (this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('empty');\n    }\n    /**\n    @returns A promise that settles when the queue size is less than the given limit: `queue.size < limit`.\n\n    If you want to avoid having the queue grow beyond a certain size you can `await queue.onSizeLessThan()` before adding a new item.\n\n    Note that this only limits the number of items waiting to start. There could still be up to `concurrency` jobs already running that this call does not include in its calculation.\n    */\n    async onSizeLessThan(limit) {\n        // Instantly resolve if the queue is empty.\n        if (this.#queue.size < limit) {\n            return;\n        }\n        await this.#onEvent('next', () => this.#queue.size < limit);\n    }\n    /**\n    The difference with `.onEmpty` is that `.onIdle` guarantees that all work from the queue has finished. `.onEmpty` merely signals that the queue is empty, but it could mean that some promises haven't completed yet.\n\n    @returns A promise that settles when the queue becomes empty, and all promises have completed; `queue.size === 0 && queue.pending === 0`.\n    */\n    async onIdle() {\n        // Instantly resolve if none pending and if nothing else is queued\n        if (this.#pending === 0 && this.#queue.size === 0) {\n            return;\n        }\n        await this.#onEvent('idle');\n    }\n    async #onEvent(event, filter) {\n        return new Promise(resolve => {\n            const listener = () => {\n                if (filter && !filter()) {\n                    return;\n                }\n                this.off(event, listener);\n                resolve();\n            };\n            this.on(event, listener);\n        });\n    }\n    /**\n    Size of the queue, the number of queued items waiting to run.\n    */\n    get size() {\n        return this.#queue.size;\n    }\n    /**\n    Size of the queue, filtered by the given options.\n\n    For example, this can be used to find the number of items remaining in the queue with a specific priority level.\n    */\n    sizeBy(options) {\n        // eslint-disable-next-line unicorn/no-array-callback-reference\n        return this.#queue.filter(options).length;\n    }\n    /**\n    Number of running items (no longer in the queue).\n    */\n    get pending() {\n        return this.#pending;\n    }\n    /**\n    Whether the queue is currently paused.\n    */\n    get isPaused() {\n        return this.#isPaused;\n    }\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n"],"names":["TimeoutError","Error","constructor","message","super","this","name","AbortError","getDOMException","errorMessage","undefined","globalThis","DOMException","getAbortedReason","signal","reason","PriorityQueue","enqueue","run","options","element","priority","id","size","push","index","array","value","comparator","first","count","length","step","Math","trunc","it","lowerBound","a","b","splice","setPriority","findIndex","ReferenceError","item","dequeue","shift","filter","map","PQueue","timeout","carryoverConcurrencyCount","intervalCap","Number","POSITIVE_INFINITY","interval","concurrency","autoStart","queueClass","TypeError","toString","isFinite","throwOnTimeout","emit","now","Date","delay","setTimeout","clearInterval","canInitializeInterval","job","setInterval","newConcurrency","Promise","_resolve","reject","addEventListener","once","add","function_","resolve","async","throwIfAborted","operation","promise","milliseconds","fallback","customTimers","clearTimeout","timer","cancelablePromise","sign","aborted","then","timeoutError","call","error","cancel","finally","clear","pTimeout","race","result","addAll","functions","all","start","pause","onEmpty","onSizeLessThan","limit","onIdle","event","listener","off","on","sizeBy","pending","isPaused","has","Object","prototype","hasOwnProperty","prefix","Events","EE","fn","context","addListener","emitter","evt","_events","_eventsCount","clearEvent","EventEmitter","create","__proto__","eventNames","events","names","slice","getOwnPropertySymbols","concat","listeners","handlers","i","l","ee","Array","listenerCount","a1","a2","a3","a4","a5","args","len","arguments","removeListener","apply","j","removeAllListeners","prefixed","module","exports"],"sourceRoot":""}